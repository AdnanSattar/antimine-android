apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion buildVersion.targetSdk

    defaultConfig {
        // versionCode and versionName must be hardcoded to support F-droid
        versionCode 603011
        versionName '6.3.1'
        applicationId buildVersion.applicationId
        minSdkVersion buildVersion.minAppSdk
        targetSdkVersion buildVersion.targetSdk
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        resConfigs 'en', 'cs', 'de', 'es', 'fr', 'pt', 'ru', 'tr', 'vi', 'uk', 'zh'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        unitTests {
            includeAndroidResources true
            animationsDisabled true
        }
    }

    flavorDimensions "version"
    productFlavors {
        google {
            dimension "version"
        }

        foss {
            dimension "version"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':common')

    googleImplementation project(':proprietary')
    fossImplementation project(':foss')

    // AndroidX
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.preference:preference:$versions.preference"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"
    implementation "androidx.multidex:multidex:$versions.multiDex"

    // Constraint
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"

    // Google
    implementation "com.google.android.material:material:$versions.material"

    // Dagger
    api "com.google.dagger:dagger-android:$versions.dagger"
    api "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    testImplementation "com.google.dagger:dagger-android:$versions.dagger"
    testImplementation "com.google.dagger:dagger-android-support:$versions.dagger"

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"

    // Tests
    testImplementation "junit:junit:$versions.junit"
    testImplementation "androidx.test:core:$versions.testCore"
    testImplementation "androidx.test:core-ktx:$versions.testCore"
    testImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    testImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"
    testImplementation "androidx.fragment:fragment-testing:$versions.fragmentTest"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"
}
